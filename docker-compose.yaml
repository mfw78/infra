version: '3.2'
services:
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/config:/etc/prometheus/:ro
      - ./prometheus:/prometheus
    depends_on:
      - cadvisor
    restart: unless-stopped
  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./.env-grafana
    restart: unless-stopped
  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: unless-stopped
  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    depends_on:
      - prometheus
  geth-goerli:
    image: ethereum/client-go:stable
    ports:
      - "9545:8545"
      - "9546:8546"
      - "40404:40404/tcp"
      - "40404:40404/udp"
    volumes:
      - /var/lib/blockchains/goerli:/root/.ethereum
    restart: unless-stopped
    command:
      - '--goerli'
      - '--http'
      - '--http.corsdomain=*'
      - '--http.vhosts=*'
      - '--http.addr=0.0.0.0'
      - '--cache=2048'
      - '--ws'
      - '--ws.addr=0.0.0.0'
      - '--metrics'
      - '--metrics.addr=0.0.0.0'
      - '--metrics.port=9100'
      - '--port=40404'
  geth-goerli-exporter:
    image: hunterlong/gethexporter:latest
    # ports:
    #   - 9101:9090
    environment:
      - GETH=http://geth-goerli:8545
    depends_on:
      - geth-goerli
    restart: unless-stopped
  clef-testnet:
    image: ethersphere/clef:latest
    restart: unless-stopped
    volumes:
      - ./clef/testnet:/app/data
    command: full
    env_file:
      - ./.env-clef-testnet
  clef-mainnet:
    image: ethersphere/clef:latest
    restart: unless-stopped
    volumes:
      - ./clef/mainnet:/app/data
    command: full
    env_file:
      - ./.env-clef-mainnet
  bee-testnet:
    image: ethersphere/bee:latest
    restart: unless-stopped
    ports:
      - "1733:1633"
      - "1734:1634"
      - "1735:1635"
    volumes:
      - /var/lib/blockchains/bee-testnet:/home/bee/.bee
      - ./bee/testnet/password:/home/bee/.bee/password
    command: start
    depends_on:
      - clef-testnet
    env_file:
      - "./.env-bee-testnet"
  bee-mainnet:
    image: ethersphere/bee:stable
    restart: unless-stopped
    ports:
      - "1633:1633"
      - "1634:1634"
      - "1635:1635"
    volumes:
      - /var/lib/blockchains/bee-mainnet:/home/bee/.bee
      - ./bee/mainnet/password:/home/bee/.bee/password
    command: start
    depends_on:
      - clef-mainnet
    env_file:
      - "./.env-bee-mainnet"
  erigon:
    image: thorax/erigon:stable
    command: erigon --metrics --metrics.addr=0.0.0.0 --metrics.port=6060 --private.api.addr=0.0.0.0:9090 --pprof --pprof.addr=0.0.0.0 --pprof.port=6061
    volumes:
      - /var/lib/blockchains/mainnet:/home/erigon/.local/share/erigon
    ports:
      - "30303:30303/tcp"
      - "30303:30303/udp"
      - "30304:30304/tcp"
      - "30304:30304/udp"
    restart: unless-stopped
  rpcdaemon:
    image: thorax/erigon:stable
    command: rpcdaemon --datadir=/home/erigon/.local/share/erigon --private.api.addr=erigon:9090 --http.addr=0.0.0.0 --http.vhosts=* --http.corsdomain=* --http.api=eth,debug,net --ws --metrics --metrics.addr=0.0.0.0 --metrics.port=6060
    pid: service:erigon # Use erigon's PID namespace. It's required to open Erigon's DB from another process (RPCDaemon local-mode)
    volumes:
      - /var/lib/blockchains/mainnet:/home/erigon/.local/share/erigon
    ports:
      - "8545:8545"
    restart: unless-stopped
  openethereum-xdai:
    image: openethereum/openethereum:latest
    command: '--chain=xdai --base-path=/home/openethereum/xdai --port 50505 --interface=all --jsonrpc-port=8545 --jsonrpc-interface=all --ws-port=8546 --ws-interface=all --metrics-prefix=xdai --metrics-port=3000 --metrics-interface=all'
    volumes:
      - /var/lib/blockchains/xdai:/home/openethereum/xdai
    ports:
      - "10545:8545/tcp"
      - "10546:8546/tcp"
      - "50505:50505/tcp"
      - "50505:50505/udp"
    restart: unless-stopped
  gitea:
    image: gitea/gitea:1.15.4
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: always
    volumes:
      - ./gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8000:3000"
      - "222:22"